test_mod_9 <- estimatr::lm_robust(beta ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(alpha>=poster_alpha_quartiles[8]) %>% filter(alpha<poster_alpha_quartiles[9]), se_type = "HC2")
test_mod_10 <- estimatr::lm_robust(beta ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(alpha>poster_alpha_quartiles[9]), se_type = "HC2")
test_mod_1$coefficients["platform_treatment"]
test_mod_2$coefficients["platform_treatment"]
test_mod_3$coefficients["platform_treatment"]
test_mod_4$coefficients["platform_treatment"]
test_mod_5$coefficients["platform_treatment"]
test_mod_6$coefficients["platform_treatment"]
test_mod_7$coefficients["platform_treatment"]
test_mod_8$coefficients["platform_treatment"]
test_mod_9$coefficients["platform_treatment"]
test_mod_10$coefficients["platform_treatment"]
plot(d_final %>% filter(poster) %>% pull(IDEO), d_final %>% filter(poster) %>% pull(relsim))
boxplot(relsim ~ IDEO, data = d_final %>% filter(poster))
d_relsim_by_ideo <- d_final %>% filter(poster) %>% group_by(IDEO) %>% summarise(mean_relsim = mean(relsim, na.rm = T)) %>% filter(!is.na(IDEO))
plot(d_relsim_by_ideo$IDEO, d_relsim_by_ideo$mean_relsim)
d_final$relsim_trin
d_final %>% filter(poster) %>% pull(IDEO) %>% hist
d_final %>% filter(poster) %>% filter(IDEO==1) %>% pull(relsim) %>% hist
d_final %>% filter(poster) %>% filter(IDEO==2) %>% pull(relsim) %>% hist
d_final %>% filter(poster) %>% filter(IDEO==3) %>% pull(relsim) %>% hist
d_final %>% filter(poster) %>% filter(IDEO==4) %>% pull(relsim) %>% hist
d_final %>% filter(poster) %>% filter(IDEO==5) %>% pull(relsim) %>% hist
#DV: beta
mod_h1_int_relsim_adj <- estimatr::lm_robust(beta ~ platform_treatment*relsim + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
mod_h1_int_relsim_adj$coefficients["platform_treatment:relsim"]
mod_h1_int_relsim_adj$p.value["platform_treatment:relsim"] < .05
#mod_h1_int_relsim_trin_adj <- estimatr::lm_robust(beta ~ platform_treatment*relsim_trin + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
# unadjusted:
mod_h1_int_relsim_unadj <- estimatr::lm_robust(beta ~ platform_treatment*relsim, data = d_final %>% filter(poster), se_type = "HC2") #sig pos interaction! p=.03
mod_h1_int_relsim_unadj$coefficients["platform_treatment:relsim"]
mod_h1_int_relsim_unadj$p.value["platform_treatment:relsim"] < .05
#mod_h1_int_relsim_trin_adj <- estimatr::lm_robust(beta ~ platform_treatment*relsim_trin, data = d_final %>% filter(poster), se_type = "HC2") #sig pos interaction! p=.03
#DV: beta (subset analyses, 3-level)
#adjusted model
mod_h1_sub_relsim_trin_lo_adj <- estimatr::lm_robust(beta ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(relsim_trin<0), se_type = "HC2")
mod_h1_sub_relsim_trin_lo_adj$coefficients["platform_treatment"]
mod_h1_sub_relsim_trin_lo_adj$p.value["platform_treatment"]/2 < .00001 # p=.0000086
mod_h1_sub_relsim_trin_0_adj <- estimatr::lm_robust(beta ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(relsim_trin==0), se_type = "HC2")
mod_h1_sub_relsim_trin_0_adj$coefficients["platform_treatment"]
mod_h1_sub_relsim_trin_0_adj$p.value["platform_treatment"]/2 < .05 #p=.01
mod_h1_sub_relsim_trin_hi_adj <- estimatr::lm_robust(beta ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(relsim_trin>0), se_type = "HC2")
mod_h1_sub_relsim_trin_hi_adj$coefficients["platform_treatment"]
mod_h1_sub_relsim_trin_hi_adj$p.value["platform_treatment"]/2 < .05 #p=.40
# unadjusted models ---
mod_h1_sub_relsim_trin_lo_unadj <- estimatr::lm_robust(beta ~ platform_treatment, data = d_final %>% filter(poster) %>% filter(relsim_trin<0), se_type = "HC2") #-.4, p<.0001
mod_h1_sub_relsim_trin_lo_unadj$coefficients["platform_treatment"]
mod_h1_sub_relsim_trin_lo_unadj$p.value["platform_treatment"]/2 < .05
mod_h1_sub_relsim_trin_0_unadj <- estimatr::lm_robust(beta ~ platform_treatment, data = d_final %>% filter(poster) %>% filter(relsim_trin==0), se_type = "HC2") #-.27, p<.05
mod_h1_sub_relsim_trin_0_unadj$coefficients["platform_treatment"]
mod_h1_sub_relsim_trin_0_unadj$p.value["platform_treatment"]/2 < .05
mod_h1_sub_relsim_trin_hi_unadj <- estimatr::lm_robust(beta ~ platform_treatment, data = d_final %>% filter(poster) %>% filter(relsim_trin>0), se_type = "HC2") #.06, p=.73
mod_h1_sub_relsim_trin_hi_unadj$coefficients["platform_treatment"]
mod_h1_sub_relsim_trin_hi_unadj$p.value["platform_treatment"]/2 < .05
#DV: alpha
mod_h2_int_relsim_adj <- estimatr::lm_robust(alpha ~ platform_treatment*relsim + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
mod_h2_int_relsim_trin_adj <- estimatr::lm_robust(alpha ~ platform_treatment*relsim_trin + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
# unadjusted:
mod_h2_int_relsim_unadj <- estimatr::lm_robust(alpha ~ platform_treatment*relsim, data = d_final %>% filter(poster), se_type = "HC2") #sig pos interaction! p=.03
mod_h2_int_relsim_trin_unadj <- estimatr::lm_robust(alpha ~ platform_treatment*relsim_trin, data = d_final %>% filter(poster), se_type = "HC2") #sig pos interaction! p=.03
# H3 -- self-selection
# main H confirmed for relsim_trin<=0
# Amongst people for whom offline is more likeminded than online, posters are more extreme than lurkers
test_h3_sub_relsim_trin_lo <- var.test(d_final %>% filter(poster) %>% filter(relsim_trin<0) %>% filter(platform_treatment==0) %>% pull(alpha), d_final %>% filter(!poster) %>% filter(relsim_trin<0) %>% filter(platform_treatment==0) %>% pull(alpha), alternative = "greater") #1.60; p<.001
# Amongst people for whom offline and online are equally likeminded, posters are more extreme than lurkers
test_h3_sub_relsim_trin_0 <- var.test(d_final %>% filter(poster) %>% filter(relsim_trin==0) %>% filter(platform_treatment==0) %>% pull(alpha), d_final %>% filter(!poster) %>% filter(relsim_trin==0) %>% filter(platform_treatment==0) %>% pull(alpha), alternative = "greater") #1.47; p<.01
# Amongst people for whom online is more likeminded than offline, the difference is not significant at conventional levels
test_h3_sub_relsim_trin_hi <- var.test(d_final %>% filter(poster) %>% filter(relsim_trin>0) %>% filter(platform_treatment==0) %>% pull(alpha), d_final %>% filter(!poster) %>% filter(relsim_trin>0) %>% filter(platform_treatment==0) %>% pull(alpha), alternative = "greater") #1.39; p = .15
# synthesis: self-selection aligns with extremity MOST among people whose online networks are LESS likeminded than their offline networks --> this makes sense, if people self-censor online when online is non-likeminded and their speech is moderate
# H4 -- polarization
# main H (null) confirmed
test_h4_sub_relsim_trin_lo <- var.test(d_final %>% filter(poster) %>% filter(relsim_trin<0) %>% filter(platform_treatment==1) %>% pull(alpha), d_final %>% filter(poster) %>% filter(relsim_trin<0) %>% filter(platform_treatment==0) %>% pull(alpha), alternative = "greater") #.98, p=.60
test_h4_sub_relsim_trin_0 <- var.test(d_final %>% filter(poster) %>% filter(relsim_trin==0) %>% filter(platform_treatment==1) %>% pull(alpha), d_final %>% filter(poster) %>% filter(relsim_trin==0) %>% filter(platform_treatment==0) %>% pull(alpha), alternative = "greater") #.88, p=.88
test_h4_sub_relsim_trin_hi <- var.test(d_final %>% filter(poster) %>% filter(relsim_trin>0) %>% filter(platform_treatment==1) %>% pull(alpha), d_final %>% filter(poster) %>% filter(relsim_trin>0) %>% filter(platform_treatment==0) %>% pull(alpha), alternative = "greater") #1.1; p=.27
anon_pca_1d <- psych::principal(d_final %>% select(starts_with("acct")), nfactors = 1)
d_final$anon_pca_1d_scores <- anon_pca_1d$scores
anon_pca_2d <- psych::principal(d_final %>% select(starts_with("acct")), nfactors = 2)
anon_pca_2d
d_final$anon_pca_2d_scores_d1 <- anon_pca_2d$scores[,1]
d_final$anon_pca_2d_scores_d2 <- anon_pca_2d$scores[,2]
#plot()
#PCA 1d
estimatr::lm_robust(beta ~ acct_shows_name + acct_shows_face + acct_vis_rwf + acct_vis_fam + acct_vis_work, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(beta ~ acct_shows_name, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(beta ~ acct_shows_face, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(beta ~ acct_vis_rwf, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(beta ~ acct_vis_fam, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(beta ~ acct_vis_work, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
#PCA 2d (d1 is visibility, d2 is show name,face)
# adjusted
estimatr::lm_robust(beta ~ anon_pca_2d_scores_d1 + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(beta ~ anon_pca_2d_scores_d2 + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
# unadjusted
estimatr::lm_robust(beta ~ anon_pca_2d_scores_d1, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(beta ~ anon_pca_2d_scores_d2, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
# 1d anon pca interaction
#DV: beta
mod_h1_int_anon_pca_1d_adj <- estimatr::lm_robust(beta ~ platform_treatment*anon_pca_1d_scores + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
mod_h1_int_anon_pca_1d_adj$coefficients["platform_treatment:anon_pca_1d_scores"]
mod_h1_int_anon_pca_1d_adj$p.value["platform_treatment:anon_pca_1d_scores"] < .05
# unadjusted:
mod_h1_int_anon_pca_1d_unadj <- estimatr::lm_robust(beta ~ platform_treatment*anon_pca_1d_scores, data = d_final %>% filter(poster), se_type = "HC2") #sig pos interaction! p=.03
mod_h1_int_anon_pca_1d_unadj$coefficients["platform_treatment:anon_pca_1d_scores"]
mod_h1_int_anon_pca_1d_unadj$p.value["platform_treatment:anon_pca_1d_scores"] < .05
# 2d anon pca interaction
#DV: beta
mod_h1_int_anon_pca_2d_scores_d1_adj <- estimatr::lm_robust(beta ~ platform_treatment*anon_pca_2d_scores_d1 + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
mod_h1_int_anon_pca_2d_scores_d1_adj$coefficients["platform_treatment:anon_pca_2d_scores_d1"]
mod_h1_int_anon_pca_2d_scores_d1_adj$p.value["platform_treatment:anon_pca_2d_scores_d1"] < .05
# unadjusted:
mod_h1_int_anon_pca_2d_scores_d1_unadj <- estimatr::lm_robust(beta ~ platform_treatment*anon_pca_2d_scores_d1, data = d_final %>% filter(poster), se_type = "HC2") #sig pos interaction! p=.03
mod_h1_int_anon_pca_2d_scores_d1_unadj$coefficients["platform_treatment:anon_pca_2d_scores_d1"]
mod_h1_int_anon_pca_2d_scores_d1_unadj$p.value["platform_treatment:anon_pca_2d_scores_d1"] < .05
#DV: beta
mod_h1_int_anon_pca_2d_scores_d2_adj <- estimatr::lm_robust(beta ~ platform_treatment*anon_pca_2d_scores_d2 + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
mod_h1_int_anon_pca_2d_scores_d2_adj$coefficients["platform_treatment:anon_pca_2d_scores_d2"]
mod_h1_int_anon_pca_2d_scores_d2_adj$p.value["platform_treatment:anon_pca_2d_scores_d2"] < .05
# unadjusted:
mod_h1_int_anon_pca_2d_scores_d2_unadj <- estimatr::lm_robust(beta ~ platform_treatment*anon_pca_2d_scores_d2, data = d_final %>% filter(poster), se_type = "HC2") #sig pos interaction! p=.03
mod_h1_int_anon_pca_2d_scores_d2_unadj$coefficients["platform_treatment:anon_pca_2d_scores_d2"]
mod_h1_int_anon_pca_2d_scores_d2_unadj$p.value["platform_treatment:anon_pca_2d_scores_d2"] < .05
estimatr::lm_robust(abs(alpha) ~ platform_treatment*anon_pca_1d_scores + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(abs(alpha) ~ anon_pca_1d_scores, data = d_final %>% filter(poster), se_type = "HC2") %>% coefplot::coefplot()
#estimatr::lm_robust(abs(alpha) ~ anon_pca_1d_scores + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
estimatr::lm_robust(abs(alpha) ~ acct_shows_name + acct_shows_face + acct_vis_rwf + acct_vis_fam + acct_vis_work, data = d_final %>% filter(poster) %>% filter(platform_treatment==1) , se_type = "HC2") %>% coefplot::coefplot()
# d_final$acct_shows_name
# d_final$acct_shows_face
# d_final$acct_vis_rwf
# d_final$acct_vis_fam
# d_final$acct_vis_work
## H1
mod_h1_fb <- estimatr::lm_robust(beta ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(primary_platform=="fb"), se_type = "HC2")
mod_h1_fb
mod_h1_fb$coefficients['platform_treatment']
mod_h1_fb$p.value['platform_treatment']/2 #p<0.001
mod_h1_fb$p.value['platform_treatment']/2 < 0.001
## H2
mod_h2_fb <- estimatr::lm_robust(alpha ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(primary_platform=="fb"), se_type = "HC2")
mod_h2_fb
mod_h2_fb$coefficients['platform_treatment']
mod_h2_fb$p.value['platform_treatment']/2 #p=.36
## H3
test_h3_fb <- var.test(d_final %>% filter(poster) %>% filter(platform_treatment==0) %>% pull(alpha), d_final %>% filter(!poster) %>% filter(platform_treatment==0) %>% filter(primary_platform=="fb") %>% pull(alpha), alternative = "greater")
test_h3_fb
test_h3_fb$estimate
test_h3_fb$p.value #p<.00001
test_h3_fb$p.value <.000001
paste0("$p< 1 \\times 10^{-",length(sig_thresholds[which(sig_thresholds>test_h3_fb$p.value)]),"}$") %>% writeLines(., "../results/h3_fb_p.txt")
paste0("($F=",test_h3_fb$statistic %>% round(2),"$, $p< 1 \\times 10^{-",length(sig_thresholds[which(sig_thresholds>test_h3_fb$p.value)]),"}$, ") %>% writeLines(., "../results/h3_fb_fp.txt")
## H4
test_h4_fb <- var.test(d_final %>% filter(poster) %>% filter(platform_treatment==1) %>% pull(alpha), d_final %>% filter(poster) %>% filter(platform_treatment==0) %>% filter(primary_platform=="fb") %>% pull(alpha), alternative = "greater")
test_h4_fb
test_h4_fb$estimate
test_h4_fb$p.value #p=.078
paste0("($F=",test_h4_fb$statistic %>% round(2),"$, $p \\approx ", test_h4_fb$p.value %>% round(.,2),"}$, ") %>% writeLines(., "../results/h4_fb_fp.txt")
## H1
mod_h1_tw <- estimatr::lm_robust(beta ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(primary_platform=="tw"), se_type = "HC2")
mod_h1_tw
mod_h1_tw$coefficients['platform_treatment']
mod_h1_tw$p.value['platform_treatment']/2 #p<.0001
mod_h1_tw$p.value['platform_treatment']/2 < .0001
## H2
mod_h2_tw <- estimatr::lm_robust(alpha ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster) %>% filter(primary_platform=="tw"), se_type = "HC2")
mod_h2_tw
mod_h2_tw$coefficients['platform_treatment']
mod_h2_tw$p.value['platform_treatment']/2 #p=.35
## H3
test_h3_tw <- var.test(d_final %>% filter(poster) %>% filter(platform_treatment==0) %>% pull(alpha), d_final %>% filter(!poster) %>% filter(platform_treatment==0) %>% filter(primary_platform=="tw") %>% pull(alpha), alternative = "greater")
test_h3_tw
test_h3_tw$estimate
test_h3_tw$p.value #p<.003
paste0("$p< 1 \\times 10^{-",length(sig_thresholds[which(sig_thresholds>test_h3_tw$p.value)]),"}$") %>% writeLines(., "../results/h3_tw_p.txt")
paste0("and $F=",test_h3_tw$statistic %>% round(2),"$, $p< 1 \\times 10^{-",length(sig_thresholds[which(sig_thresholds>test_h3_tw$p.value)]),"}$,") %>% writeLines(., "../results/h3_tw_fp.txt")
## H4
test_h4_tw <- var.test(d_final %>% filter(poster) %>% filter(platform_treatment==1) %>% pull(alpha), d_final %>% filter(poster) %>% filter(platform_treatment==0) %>% filter(primary_platform=="tw") %>% pull(alpha), alternative = "greater")
test_h4_tw
test_h4_tw$estimate
test_h4_tw$p.value #p=.998
paste0("and $F=",test_h4_tw$statistic %>% round(2),"$, $p \\approx ", test_h4_tw$p.value %>% round(.,2),"}$,") %>% writeLines(., "../results/h4_tw_fp.txt")
test_h4_tw_2sided <- var.test(d_final %>% filter(poster) %>% filter(platform_treatment==1) %>% pull(alpha), d_final %>% filter(poster) %>% filter(platform_treatment==0) %>% filter(primary_platform=="tw") %>% pull(alpha), alternative = "two.sided")
test_h4_tw_2sided
#paste0("($F=",test_h4_tw_2sided$statistic %>% round(2),"$, $p = ", test_h4_tw_2sided$p.value %>% round(.,2),"}$)") %>% writeLines(., "../results/h4_tw_2sided_fp.txt")
paste0("($F=",test_h4_tw_2sided$statistic %>% round(2),"$, $p< 1 \\times 10^{-",length(sig_thresholds[which(sig_thresholds>test_h4_tw_2sided$p.value)]),"}$).") %>% writeLines(., "../results/h4_tw_2sided_fp.txt")
# # plot colors
# # color_poster_online = rgb(.8,.2,.8,1)
# # color_poster_offline = rgb(.1,.5,.1,1)
# # color_lurker = rgb(.8,.1,.2,1)
#
# color_poster_online = "#1a25b5"
# color_poster_offline = "#25b51a"
# color_lurker = "#b51a25"
#
# pch = 16
# ref_pch = 21
#
# density_lwd = 1
#
# twod_coefplot_xlim = .5
#
# pdf(file = "triple_plot.pdf", width = 8, height = 3.5)
#
# par(mfrow = c(1,3), pty = "s", bty = "n")
#
# plot(mod_h2_pooled_ks$coefficients['platform_treatment'], mod_h1_pooled_ks$coefficients['platform_treatment'], xlim = c(-twod_coefplot_xlim,twod_coefplot_xlim), ylim = c(-twod_coefplot_xlim,twod_coefplot_xlim), type = "n",
#      xlab = "Lexical Ideology Coefficient",
#      ylab = "Outspokenness Coefficient",
#      main = "")
# #abline(h=0,v=0, lty = 3, col = reference_gray)
# segments(x0 = c(0,0,0,0), x1 = c(0,1,0,-1), y0 = c(0,0,0,0), y1 = c(1, 0, -1, 0), lty = 3, col = "black")
#
#
# points(mod_h2_pooled_ks$coefficients['platform_treatment'], mod_h1_pooled_ks$coefficients['platform_treatment'], pch = pch, col = color_poster_online)
# segments(x0=mod_h2_pooled_ks$coefficients['platform_treatment'], y0=mod_h1_pooled_ks$conf.low['platform_treatment'], y1=mod_h1_pooled_ks$conf.high['platform_treatment'], col = color_poster_online)
# segments(y0=mod_h1_pooled_ks$coefficients['platform_treatment'], x0=mod_h2_pooled_ks$conf.low['platform_treatment'], x1=mod_h2_pooled_ks$conf.high['platform_treatment'], col = color_poster_online)
#
# # mod_h2_pooled_ks$conf.low['platform_treatment']
# # mod_h2_pooled_ks$conf.high['platform_treatment']
# #
# # mod_h1_pooled_ks$conf.low['platform_treatment']
# # mod_h1_pooled_ks$conf.high['platform_treatment']
# #
# #
# # legend("topleft", legend = c("Close Friend (Control)", "Someone You Just Met", "Most Liberal Person You Talk To", "Most Conservative Person You Talk To"), pch = c(ref_pch, pch, pch, pch), col = c(reference_gray, t1_coef_col, tlib_coef_col, tcon_coef_col), bty = "n", cex = lab_cex)
# #
#
# #points(0,0, pch = ref_pch, col = reference_gray, bg="white")
#
# #points(0,0, pch = ref_pch, col = color_poster_offline, bg="white")
# points(0,0, pch = ref_pch, col = color_poster_offline, bg=color_poster_offline)
#
# #####################
#
# plot(density_poster, main="", xlab="Lexical Ideology", ylab="Density", xlim = c(-4,4),
#      ylim=range(c(density_poster$y, density_lurker$y)),  # adjust y-axis limits
#      type="n"  # This will not plot anything but set up the coordinates.
# )
#
# polygon(density_poster$x, density_poster$y, col=adjustcolor(color_poster_offline, alpha.f=0.5), border=NA)
# lines(density_poster, col=color_poster_offline, lwd=density_lwd)
# polygon(density_lurker$x, density_lurker$y, col=adjustcolor(color_lurker, alpha.f=0.5), border=NA)
# lines(density_lurker, col=color_lurker, lwd=density_lwd)
# #legend("topright", legend = c("Lurkers Offline", "Posters Offline"), col = c(color_lurker, color_poster_offline), pch = 15, bty = "n")
#
#
# ###################
#
# plot(density_poster_online, main="", xlab="Lexical Ideology", ylab="Density", xlim = c(-4,4),
#      ylim=range(c(density_poster_online$y, density_poster_offline$y)),  # adjust y-axis limits
#      type="n"  # This will not plot anything but set up the coordinates.
# )
#
# polygon(density_poster_offline$x, density_poster_offline$y, col=adjustcolor(color_poster_offline, alpha.f=0.5), border=NA)
# lines(density_poster_offline, col=color_poster_offline, lwd=density_lwd)
# polygon(density_poster_online$x, density_poster_online$y, col=adjustcolor(color_poster_online, alpha.f=0.5), border=NA)
# lines(density_poster_online, col=color_poster_online, lwd=density_lwd)
# #legend("topright", legend = c("Posters Online", "Posters Offline"), col = c(color_poster_online, color_poster_offline), pch = 15, bty = "n")
#
#
# #################
#
# par(xpd=T)
#
# legend(0, .7, legend = c("Posters (Online)", "Posters (Offline)", "Lurkers (Offline)"), col = c(color_poster_online, color_poster_offline, color_lurker), pch = 16, bty = "n")
#
# dev.off()
# plot colors
# color_poster_online = rgb(.8,.2,.8,1)
# color_poster_offline = rgb(.1,.5,.1,1)
# color_lurker = rgb(.8,.1,.2,1)
color_poster_online = "#1a25b5"
color_poster_offline = "#25b51a"
color_lurker = "#b51a25"
# w_3gang_sep = 5
# h_3gang_sep = 6
w_3gang_sep = 4
h_3gang_sep = 5
pch = 16
ref_pch = 21
density_lwd = 1
twod_coefplot_xlim = .5
pdf(file = "../results/triple_plot_sep_h12.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(pty = "s", bty = "n")
plot(mod_h2_pooled_ks$coefficients['platform_treatment'], mod_h1_pooled_ks$coefficients['platform_treatment'], xlim = c(-twod_coefplot_xlim,twod_coefplot_xlim), ylim = c(-twod_coefplot_xlim,twod_coefplot_xlim), type = "n",
xlab = "Lexical Ideology Coefficient",
ylab = "Outspokenness Coefficient",
main = "")
segments(x0 = c(0,0,0,0), x1 = c(0,1,0,-1), y0 = c(0,0,0,0), y1 = c(1, 0, -1, 0), lty = 3, col = "black")
points(mod_h2_pooled_ks$coefficients['platform_treatment'], mod_h1_pooled_ks$coefficients['platform_treatment'], pch = pch, col = color_poster_online)
segments(x0=mod_h2_pooled_ks$coefficients['platform_treatment'], y0=mod_h1_pooled_ks$conf.low['platform_treatment'], y1=mod_h1_pooled_ks$conf.high['platform_treatment'], col = color_poster_online)
segments(y0=mod_h1_pooled_ks$coefficients['platform_treatment'], x0=mod_h2_pooled_ks$conf.low['platform_treatment'], x1=mod_h2_pooled_ks$conf.high['platform_treatment'], col = color_poster_online)
points(0,0, pch = ref_pch, col = color_poster_offline, bg=color_poster_offline)
# par(xpd=T)
# legend(-.3,.68, legend = c("Posters (Online)", "Posters (Offline)"), col = c(color_poster_online, color_poster_offline), pch = 16, bty = "n")
dev.off()
pdf(file = "../results/triple_plot_sep_h12_legend.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(bty="n")
plot(1,1,type = "n", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
legend("center", legend = c("Posters (Online)", "Posters (Offline)"), col = c(color_poster_online, color_poster_offline), pch = 16, bty = "n")
dev.off()
#####################
pdf(file = "../results/triple_plot_sep_h3.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(pty = "s", bty = "n")
plot(density_poster, main="", xlab="Lexical Ideology", ylab="Density", xlim = c(-4,4),
ylim=range(c(density_poster$y, density_lurker$y)),  # adjust y-axis limits
type="n"  # This will not plot anything but set up the coordinates.
)
polygon(density_poster$x, density_poster$y, col=adjustcolor(color_poster_offline, alpha.f=0.5), border=NA)
lines(density_poster, col=color_poster_offline, lwd=density_lwd)
polygon(density_lurker$x, density_lurker$y, col=adjustcolor(color_lurker, alpha.f=0.5), border=NA)
lines(density_lurker, col=color_lurker, lwd=density_lwd)
# par(xpd=T)
# legend(-3, .68, legend = c("Posters (Offline)", "Lurkers (Offline)"), col = c(color_poster_offline, color_lurker), pch = 16, bty = "n")
dev.off()
pdf(file = "../results/triple_plot_sep_h3_legend.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(bty="n")
plot(1,1,type = "n", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
legend("center", legend = c("Posters (Offline)", "Lurkers (Offline)"), col = c(color_poster_offline, color_lurker), pch = 16, bty = "n")
dev.off()
###################
pdf(file = "../results/triple_plot_sep_h4.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(pty = "s", bty = "n")
plot(density_poster_online, main="", xlab="Lexical Ideology", ylab="Density", xlim = c(-4,4),
ylim=range(c(density_poster_online$y, density_poster_offline$y)),  # adjust y-axis limits
type="n"  # This will not plot anything but set up the coordinates.
)
polygon(density_poster_offline$x, density_poster_offline$y, col=adjustcolor(color_poster_offline, alpha.f=0.5), border=NA)
lines(density_poster_offline, col=color_poster_offline, lwd=density_lwd)
polygon(density_poster_online$x, density_poster_online$y, col=adjustcolor(color_poster_online, alpha.f=0.5), border=NA)
lines(density_poster_online, col=color_poster_online, lwd=density_lwd)
# par(xpd=T)
# legend(-3,.68, legend = c("Posters (Online)", "Posters (Offline)"), col = c(color_poster_online, color_poster_offline), pch = 16, bty = "n")
dev.off()
pdf(file = "../results/triple_plot_sep_h4_legend.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(bty="n")
plot(1,1,type = "n", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
legend("center", legend = c("Posters (Online)", "Posters (Offline)"), col = c(color_poster_online, color_poster_offline), pch = 16, bty = "n")
dev.off()
#################
plotMiniBellCurve <- function(x0, x1, y0, y1, col = "black", fill = "gray", bottom_border = F, lty = 1) {
# Calculate the range for x values based on input coordinates
x_coords <- seq(x0, x1, length.out = 100)
# Standard normal distribution scaled to fit within the rectangle defined by y0 and y1
# Adjust mean and sd to center and scale the curve within the box
mean <- mean(c(x0, x1))
sd <- (x1 - x0) / 6  # 99.7% data within +/- 3sd (covers most of the width)
y_values <- dnorm(x_coords, mean = mean, sd = sd)
# Normalize y values to fit within y0 and y1
y_scaled <- (y_values - min(y_values)) / (max(y_values) - min(y_values)) * (y1 - y0) + y0
# Draw the curve and fill below it
lines(x_coords, y_scaled, col = col, lty = lty)
polygon(c(x_coords, rev(x_coords)), c(rep(y0, length(x_coords)), rev(y_scaled)), col = fill, border = if_else(bottom_border, true = col, false = NA))
}
# Example usage in a plot:
x <- 1:10
y <- x^2
plot(x, y, type = "o", col = "blue", pch = 19, ylim = c(0, 110), ylab = "Y", xlab = "X")
# Add a miniature bell curve to the plot
plotMiniBellCurve(7, 9, 30, 50, col = "red", fill = "pink")
minibell_vadj = -.072
# plot colors
#color_poster_online = "#1a25b5"
color_poster_offline = "#000000"
color_lurker = "#b51a25"
saturation = .75
value_lt = .75
value_dk = .75
hue_poster_online = 195
color_poster_online_lt <- hsv(hue_poster_online/360, s = saturation, v = value_lt)
color_poster_online_dk <- hsv(hue_poster_online/360, s = saturation, v = value_dk)
hue_lurker = 0
color_lurker_lt <- hsv(hue_lurker/360, s = saturation, v = value_lt)
color_lurker_dk <- hsv(hue_lurker/360, s = saturation, v = value_dk)
w_3gang_sep = 5
h_3gang_sep = 5
pch = 21
density_lty = 1
density_lwd = 1.5
twod_coefplot_xlim = .5
inset = c(-.15, 0)
pdf(file = "../results/triple_plot_sep_h12_bwsafe.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(pty = "s", bty = "n")
plot(mod_h2_pooled_ks$coefficients['platform_treatment'], mod_h1_pooled_ks$coefficients['platform_treatment'], xlim = c(-twod_coefplot_xlim,twod_coefplot_xlim), ylim = c(-twod_coefplot_xlim,twod_coefplot_xlim), type = "n",
xlab = "Lexical Ideology Coefficient",
ylab = "Outspokenness Coefficient",
main = "")
segments(x0 = c(0,0,0,0), x1 = c(0,1,0,-1), y0 = c(0,0,0,0), y1 = c(1, 0, -1, 0), lty = 3, col = "black")
points(mod_h2_pooled_ks$coefficients['platform_treatment'], mod_h1_pooled_ks$coefficients['platform_treatment'], pch = pch, col = color_poster_online_dk, bg = color_poster_online_dk)
segments(x0=mod_h2_pooled_ks$coefficients['platform_treatment'], y0=mod_h1_pooled_ks$conf.low['platform_treatment'], y1=mod_h1_pooled_ks$conf.high['platform_treatment'], col = color_poster_online_dk)
segments(y0=mod_h1_pooled_ks$coefficients['platform_treatment'], x0=mod_h2_pooled_ks$conf.low['platform_treatment'], x1=mod_h2_pooled_ks$conf.high['platform_treatment'], col = color_poster_online_dk)
points(0,0, pch = 16, cex = 1.5, col = "white")
points(0,0, pch = 21, col = color_poster_offline, bg="white")
par(xpd=T)
legend("topright", legend = c("Posters (Offline)", "Posters (Online)"), col = c(color_poster_offline, color_poster_online_dk), pt.bg = c("white", color_poster_online_dk), pch = 21, bty = "n", inset = inset)
dev.off()
#####################
pdf(file = "../results/triple_plot_sep_h3_bwsafe.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(pty = "s", bty = "n")
plot(density_poster, main="", xlab="Lexical Ideology", ylab="Density", xlim = c(-4,4),
#ylim=range(c(density_poster$y, density_lurker$y)),  # adjust y-axis limits
ylim=c(0,.6),
type="n"
)
polygon(density_lurker$x, density_lurker$y, col=color_lurker_lt, border=NA)
lines(density_poster, col=color_poster_offline, lwd=density_lwd, lty = density_lty)
par(xpd=T)
legend("topright", legend = c("Posters (Offline)", "Lurkers (Offline)"), col = "white", pch = 16, bty = "n", inset = inset)
plotMiniBellCurve(1, 2, .644+minibell_vadj, .669+minibell_vadj, col = color_poster_offline, fill = NA, lty = density_lty)
plotMiniBellCurve(1, 2, .603+minibell_vadj, .628+minibell_vadj, col = color_lurker_lt, fill = color_lurker_lt, bottom_border = T)
dev.off()
###################
pdf(file = "../results/triple_plot_sep_h4_bwsafe.pdf", width = w_3gang_sep, height = h_3gang_sep)
par(pty = "s", bty = "n")
plot(density_poster_online, main="", xlab="Lexical Ideology", ylab="Density", xlim = c(-4,4),
#ylim=range(c(density_poster_online$y, density_poster_offline$y)),  # adjust y-axis limits
ylim=c(0,.6),
type="n"  # This will not plot anything but set up the coordinates.
)
polygon(density_poster_online$x, density_poster_online$y, col=color_poster_online_lt, border=NA)
lines(density_poster_offline, col=color_poster_offline, lwd=density_lwd, lty=density_lty)
par(xpd=T)
legend("topright", legend = c("Posters (Offline)", "Posters (Online)"), col = "white", pch = 16, bty = "n", inset = inset)
plotMiniBellCurve(1, 2, .644+minibell_vadj, .669+minibell_vadj, col = color_poster_offline, fill = NA, lty = density_lty)
plotMiniBellCurve(1, 2, .603+minibell_vadj, .628+minibell_vadj, col = color_poster_online_lt, fill = color_poster_online_lt, bottom_border = T)
dev.off()
library(texreg)
include.ci = FALSE
single.row = T
float.pos = "h!"
tabular = F
table = F
# H1 H2 pre-reg only
# mod_h1_pooled_ks <- estimatr::lm_robust(beta ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
# (mod_h1_pooled_ks$p.value['platform_treatment']/2) < .00001
#
# mod_h2_pooled_ks <- estimatr::lm_robust(alpha ~ platform_treatment + age_dec + IDEO + PartyID7 + college + poc + male, data = d_final %>% filter(poster), se_type = "HC2")
# (mod_h2_pooled_ks$p.value['platform_treatment']/2) < .05 #p=.36
texreg(list("Outspokenness" = mod_h1_pooled_ks, "Lexical Ideology" = mod_h2_pooled_ks),
custom.coef.names = c("Intercept", "Platform Treatment", "Age (Decades)", "5-Point Ideology", "7-Point Partisanship", "College", "POC", "Male"),
include.ci = include.ci,
single.row = single.row,
float.pos = float.pos,
tabular = tabular,
table = table,
file = "../results/ch3_h12_pooled.tex",
label = "tab:ch3_h12_pooled",
caption = "Platform Treatment Effects"
)
#
texreg(list("Pooled" = mod_h1_pooled_ks, "Facebook" = mod_h1_fb, "Twitter" = mod_h1_tw),
custom.coef.names = c("Intercept", "Platform Treatment", "Age (Decades)", "5-Point Ideology", "7-Point Partisanship", "College", "POC", "Male"),
include.ci = include.ci,
single.row = single.row,
float.pos = float.pos,
tabular = tabular,
table = table,
file = "../results/ch3_h1_ptf.tex",
label = "tab:ch3_h1_ptf",
caption = "Platform Treatment Effects: Outspokenness (H1)"
)
texreg(list("Pooled" = mod_h2_pooled_ks, "Facebook" = mod_h2_fb, "Twitter" = mod_h2_tw),
custom.coef.names = c("Intercept", "Platform Treatment", "Age (Decades)", "5-Point Ideology", "7-Point Partisanship", "College", "POC", "Male"),
include.ci = include.ci,
single.row = single.row,
float.pos = float.pos,
tabular = tabular,
table = table,
file = "../results/ch3_h2_ptf.tex",
label = "tab:ch3_h2_ptf",
caption = "Platform Treatment Effects: Lexical Ideology (H2)"
)
#mod_h2_pooled_ks
# H1 with int relsim
texreg(list("Pooled" = mod_h1_pooled_ks, "Facebook" = mod_h1_fb, "Twitter" = mod_h1_tw, "$\\times$ Likemindedness" = mod_h1_int_relsim_adj),
custom.coef.names = c("Intercept", "Platform Treatment", "Age (Decades)", "5-Point Ideology", "7-Point Partisanship", "College", "POC", "Male", "Likemindedness", "Platform Treatment \\\\ $\\times$ Likemindedness"),
include.ci = include.ci,
single.row = single.row,
float.pos = float.pos,
tabular = tabular,
table = table,
file = "../results/ch3_h1_ptfr.tex",
label = "tab:ch3_h1_ptfr",
caption = "Platform Treatment Effects: Outspokenness (H1)"
)
#mod_h2_pooled_ks
# likemindedness subset analyses
d_final %>% filter(poster)
d_final %>% filter(poster) %>% filter(relsim_trin<0) %>% nrow
d_final %>% filter(poster) %>% filter(relsim_trin==0) %>% nrow
d_final %>% filter(poster) %>% filter(relsim_trin>0) %>% nrow
n_poster <- d_final %>% filter(poster) %>% filter(!is.na(relsim_trin)) %>% nrow()
n_relsim_off <- d_final %>% filter(poster) %>% filter(relsim_trin<0) %>% nrow
n_relsim_sim <- d_final %>% filter(poster) %>% filter(relsim_trin==0) %>% nrow
n_relsim_on <- d_final %>% filter(poster) %>% filter(relsim_trin>0) %>% nrow
prop_relsim_off <- n_relsim_off/n_poster
prop_relsim_sim <- n_relsim_sim/n_poster
prop_relsim_on <- n_relsim_on/n_poster
prop_relsim_off+prop_relsim_sim+prop_relsim_on
prop_relsim_off %>% round(2) %>% {.*100} %>% paste0(.,"\\%") %>% writeLines(., "../results/prop_relsim_off.txt")
prop_relsim_sim %>% round(2) %>% {.*100} %>% paste0(.,"\\%") %>% writeLines(., "../results/prop_relsim_sim.txt")
prop_relsim_on %>% round(2) %>% {.*100} %>% paste0(.,"\\%") %>% writeLines(., "../results/prop_relsim_on.txt")
texreg(list("Offline > Online" = mod_h1_sub_relsim_trin_lo_adj, "Offline = Online" = mod_h1_sub_relsim_trin_0_adj, "Offline < Online" = mod_h1_sub_relsim_trin_hi_adj),
custom.coef.names = c("Intercept", "Platform Treatment", "Age (Decades)", "5-Point Ideology", "7-Point Partisanship", "College", "POC", "Male"),
include.ci = include.ci,
single.row = single.row,
float.pos = float.pos,
tabular = tabular,
table = table,
file = "../results/ch3_h1_relsim_subsets.tex",
label = "tab:ch3_h1_relsim_subsets",
caption = "Platform Treatment Effect Heterogeneities: Outspokenness $\\times$ Relative Likemindedeness"
)
writeLines(paste0("$p\\approx",h2_p_rounded,"$, pre-registered one-sided test),"), "../results/h2_p.txt")
